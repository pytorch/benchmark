from pathlib import Path

def is_userbenchmark_runscript(run_script_file):
    MAGIC_LINE = "# GENERATED BY userbenchmark/release-test/__init__.py. DO NOT EDIT!"
    with open(run_script_file, "r") as rsf:
        script = rsf.read()
    if MAGIC_LINE in script:
        return True
    return False

def get_run_keys(work_dir: Path):
    run_keys = []
    for subdir in filter(lambda x: x.is_dir(), work_dir.iterdir()):
        run_script_file = subdir.joinpath("run.sh")
        if run_script_file.is_file() and is_userbenchmark_runscript(run_script_file):
            run_keys.append(subdir.name)
    return run_keys

def get_workloads(run_key_dir: Path):
    pass

def dump_result_csv(result):
    pass

def analyze_workload(workload_dir: Path, workload_name: str):
    pass

def generate_result(workload_results):
    pass

def analyze(work_dir: Path):
    # get base_args (directory starting with "pytorch-")
    work_dir = Path(work_dir)
    result = {}
    run_keys = get_run_keys(work_dir)
    # dump result to csv file
    dump_result_csv(result)
    return result