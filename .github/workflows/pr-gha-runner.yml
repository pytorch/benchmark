name: TorchBench PR Test
on:
  pull_request:
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.10"
  CUDA_VERSION: "cu116"
  CONDA_ENV: "pr-test"
  MAGMA_VERSION: "magma-cuda116"
  SETUP_INSTANCE_SCRIPT: "/workspace/setup_instance.sh"

jobs:
  pr-test:
    runs-on: [self-hosted, a100-runner]
    timeout-minutes: 1440 # 24 hours
    steps:
      - name: Checkout TorchBench
        uses: actions/checkout@v3
      - name: GPU Tuning
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          sudo LD_LIBRARY_PATH=/usr/local/nvidia/lib64:$LD_LIBRARY_PATH nvidia-smi -pm 1
          sudo LD_LIBRARY_PATH=/usr/local/nvidia/lib64:$LD_LIBRARY_PATH nvidia-smi -ac 1215,1410
          nvidia-smi
      - name: Setup Conda Env
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda create -n "${CONDA_ENV}" python="${PYTHON_VERSION}"
          conda activate "${CONDA_ENV}"
          conda install -y "${MAGMA_VERSION}" -c pytorch
          conda install -y numpy requests ninja pyyaml setuptools gitpython beautifulsoup4 regex
          # weasyprint requires libglib from conda
          # doctr_reco_predictor needs weasyprint, which needs libglib and pango
          conda install -y expecttest libglib pango -c conda-forge
          pip install unittest-xml-reporting
      - name: Install PyTorch nightly
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda activate "${CONDA_ENV}"
          pip install --pre torch torchvision torchtext torchaudio -f https://download.pytorch.org/whl/nightly/cu116/torch_nightly.html
      - name: Install TorchBench
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda activate "${CONDA_ENV}"
          python install.py
      - name: Validate benchmark components (Worker)
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda activate "${CONDA_ENV}"
          python -m components.test.test_subprocess
          python -m components.test.test_worker
      - name: Validate benchmark components (Model)
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda activate "${CONDA_ENV}"
          python test.py

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true
