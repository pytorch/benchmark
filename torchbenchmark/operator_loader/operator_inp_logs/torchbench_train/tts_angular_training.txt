Operator: aten._cudnn_rnn.default
cnt: 1, ((T([64, 50, 40], f16), [T([3072, 40], f16), T([3072, 768], f16), T([3072], f16), T([3072], f16)], 4, None, T([1, 64, 768], f16), T([1, 64, 768], f16), 2, 768, 0, 1, True, 0.0, True, False, [], None), {})
cnt: 2, ((T([64, 50, 256], f16), [T([3072, 256], f16), T([3072, 768], f16), T([3072], f16), T([3072], f16)], 4, None, T([1, 64, 768], f16), T([1, 64, 768], f16), 2, 768, 0, 1, True, 0.0, True, False, [], None), {})
Operator: aten._cudnn_rnn_backward.default
cnt: 2, ((T([64, 50, 256], f16), [T([3072, 256], f16), T([3072, 768], f16), T([3072], f16), T([3072], f16)], 4, T([3151872], f16), T([1, 64, 768], f16), T([1, 64, 768], f16), T([64, 50, 768], f16, stride=(768, 49152, 1)), T([64, 50, 768], f16), None, None, 2, 768, 0, 1, True, 0.0, True, False, [], None, T([24576016], u8), [True, False, False, True]), {})
cnt: 1, ((T([64, 50, 40], f16), [T([3072, 40], f16), T([3072, 768], f16), T([3072], f16), T([3072], f16)], 4, T([2488320], f16), T([1, 64, 768], f16), T([1, 64, 768], f16), T([64, 50, 768], f16, stride=(768, 49152, 1)), T([64, 50, 768], f16), None, None, 2, 768, 0, 1, True, 0.0, True, False, [], None, T([24576016], u8), [False, False, False, True]), {})
Operator: aten._unsafe_view.default
cnt: 3, ((T([64, 50, 768], f16), [3200, 768]), {})
cnt: 3, ((T([3200, 256], f16), [64, 50, 256]), {})
cnt: 2, ((T([64, 50, 256], f16), [3200, 256]), {})
Operator: aten.add.Tensor
cnt: 1, ((T([64, 256], f16), T([64, 256], f16)), {})
Operator: aten.clamp_min.default
cnt: 1, ((T([64, 1], f16), 1e-12), {})
Operator: aten.clone.default
cnt: 1, ((T([64, 50, 40], f16),), {})
Operator: aten.copy_.default
cnt: 1, ((T([64, 50, 40], f16), T([64, 50, 40], f16)), {})
Operator: aten.div.Tensor
cnt: 2, ((T([64, 256], f16, stride=(12800, 1)), T([64, 256], f16, stride=(1, 0))), {})
cnt: 2, ((T([], f16), 16384), {})
cnt: 1, ((T([64, 256], f16), T([64, 256], f16, stride=(1, 0))), {})
cnt: 1, ((T([64, 256], f16, stride=(0, 0)), T([64, 256], f16, stride=(1, 0))), {})
cnt: 1, ((T([64, 256], f16, stride=(12800, 1)), T([64, 1], f16)), {})
Operator: aten.eq.Scalar
cnt: 1, ((T([64, 1], f16), 0), {})
Operator: aten.ge.Scalar
cnt: 1, ((T([64, 1], f16), 1e-12), {})
Operator: aten.masked_fill_.Scalar
cnt: 1, ((T([64, 256], f16), T([64, 1], b8), 0), {})
Operator: aten.mm.default
cnt: 3, ((T([3200, 768], f16), T([768, 256], f16, stride=(1, 768))), {})
cnt: 3, ((T([256, 3200], f16, stride=(1, 256)), T([3200, 768], f16)), {})
cnt: 3, ((T([3200, 256], f16), T([256, 768], f16)), {})
Operator: aten.mul.Tensor
cnt: 1, ((T([64, 256], f16), T([64, 256], f16)), {})
cnt: 1, ((T([64, 1], f16), T([64, 256], f16)), {})
Operator: aten.neg.default
cnt: 1, ((T([64, 256], f16, stride=(0, 0)),), {})
Operator: aten.norm.ScalarOpt_dim
cnt: 1, ((T([64, 256], f16, stride=(12800, 1)), 2, [1], True), {})
Operator: aten.select_backward.default
cnt: 1, ((T([64, 256], f16), [64, 50, 256], 1, -1), {})
Operator: aten.slice_backward.default
cnt: 1, ((T([64, 50, 256], f16), [64, 50, 256], 0, 0, 9223372036854775807, 1), {})
Operator: aten.sum.SymInt
cnt: 1, ((T([64, 256], f16), [1], True), {})
Operator: aten.sum.default
cnt: 1, ((T([64, 256], f16),), {})
Operator: aten.where.self
cnt: 1, ((T([64, 1], b8), T([64, 1], f16), T([], f16)), {})
