Operator: aten._log_softmax.default
cnt: 1, ((T([508, 50272], f16), 1, False), {})
Operator: aten._log_softmax_backward_data.default
cnt: 1, ((T([508, 50272], f16), T([508, 50272], f16), 1, f16), {})
Operator: aten._softmax.default
cnt: 12, ((T([48, 128, 128], f16), -1, True), {})
Operator: aten._softmax_backward_data.default
cnt: 12, ((T([48, 128, 128], f32), T([48, 128, 128], f32), -1, f16), {})
Operator: aten._to_copy.default
cnt: 1, ((T([4, 128], b8),), {'dtype': i64})
cnt: 1, ((T([128, 128], f32),), {'dtype': f16})
cnt: 1, ((T([4, 1, 128, 128], f16, stride=(0, 16384, 128, 1)),), {'dtype': f16, 'layout': torch.strided, 'device': 'cuda'})
cnt: 1, ((T([4, 1, 128, 128], b8, stride=(128, 128, 0, 1)),), {'dtype': f16})
cnt: 1, ((T([4, 1, 128, 128], f16),), {'dtype': torch.bool})
cnt: 12, ((T([48, 128, 128], f32),), {'dtype': f16})
cnt: 12, ((T([48, 128, 128], f16),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})
Operator: aten._unsafe_view.default
cnt: 36, ((T([4, 128, 12, 64], f16), [4, 128, 768]), {})
cnt: 1, ((T([512, 50272], f16), [4, 128, 50272]), {})
cnt: 12, ((T([4, 12, 128, 64], f16), [48, 128, 64]), {})
cnt: 12, ((T([4, 128, 768], f16), [512, 768]), {})
Operator: aten.add.Tensor
cnt: 1, ((T([4, 128], i64), 2), {})
cnt: 1, ((T([128], i64), 1), {})
cnt: 1, ((T([4, 1, 128, 128], f16), T([4, 1, 128, 128], f16)), {})
cnt: 49, ((T([4, 128, 768], f16), T([4, 128, 768], f16)), {})
cnt: 12, ((T([4, 12, 128, 128], f16), T([4, 1, 128, 128], f16)), {})
cnt: 24, ((T([512, 768], f16), T([512, 768], f16)), {})
cnt: 1, ((T([50272, 768], f16), T([50272, 768], f16)), {})
Operator: aten.addmm.default
cnt: 48, ((T([768], f16), T([512, 768], f16), T([768, 768], f16, stride=(1, 768))), {})
cnt: 12, ((T([3072], f16), T([512, 768], f16), T([768, 3072], f16, stride=(1, 768))), {})
cnt: 12, ((T([768], f16), T([512, 3072], f16), T([3072, 768], f16, stride=(1, 3072))), {})
Operator: aten.bmm.default
cnt: 24, ((T([48, 128, 64], f16), T([48, 64, 128], f16, stride=(8192, 1, 64))), {})
cnt: 24, ((T([48, 128, 128], f16), T([48, 128, 64], f16)), {})
cnt: 12, ((T([48, 128, 128], f16, stride=(16384, 1, 128)), T([48, 128, 64], f16)), {})
cnt: 12, ((T([48, 64, 128], f16, stride=(8192, 1, 64)), T([48, 128, 128], f16)), {})
Operator: aten.clone.default
cnt: 2, ((T([4, 128], i64),), {})
Operator: aten.copy_.default
cnt: 2, ((T([4, 128], i64), T([4, 128], i64)), {})
Operator: aten.cumsum.default
cnt: 1, ((T([4, 128], i64), 1), {})
Operator: aten.div.Scalar
cnt: 12, ((T([4, 12, 128, 128], f16), 2), {})
Operator: aten.embedding.default
cnt: 1, ((T([50272, 768], f16), T([4, 128], i64), 1), {})
cnt: 1, ((T([2050, 768], f16), T([4, 128], i64)), {})
Operator: aten.embedding_dense_backward.default
cnt: 1, ((T([4, 128, 768], f16), T([4, 128], i64), 2050, -1, False), {})
cnt: 1, ((T([4, 128, 768], f16), T([4, 128], i64), 50272, 1, False), {})
Operator: aten.eq.Tensor
cnt: 12, ((T([4, 12, 128, 128], f16), T([], f32)), {})
Operator: aten.lt.Tensor
cnt: 1, ((T([128], i64), T([128, 1], i64)), {})
cnt: 12, ((T([4, 12, 128, 128], f16), T([], f32)), {})
Operator: aten.masked_fill.Scalar
cnt: 1, ((T([4, 1, 128, 128], f16), T([4, 1, 128, 128], b8), -65504.0), {})
Operator: aten.masked_fill_.Scalar
cnt: 1, ((T([128, 128], f32), T([128, 128], b8), 0), {})
cnt: 12, ((T([4, 12, 128, 128], f16), T([4, 12, 128, 128], b8), 0), {})
Operator: aten.maximum.default
cnt: 12, ((T([4, 12, 128, 128], f16), T([], f32)), {})
Operator: aten.mm.default
cnt: 1, ((T([512, 768], f16), T([768, 50272], f16, stride=(1, 768))), {})
cnt: 1, ((T([50272, 512], f16, stride=(1, 50272)), T([512, 768], f16)), {})
cnt: 1, ((T([512, 50272], f16), T([50272, 768], f16)), {})
cnt: 12, ((T([512, 768], f16), T([768, 3072], f16)), {})
cnt: 12, ((T([768, 512], f16, stride=(1, 768)), T([512, 3072], f16)), {})
cnt: 12, ((T([512, 3072], f16), T([3072, 768], f16)), {})
cnt: 12, ((T([3072, 512], f16, stride=(1, 3072)), T([512, 768], f16)), {})
cnt: 48, ((T([512, 768], f16), T([768, 768], f16)), {})
cnt: 48, ((T([768, 512], f16, stride=(1, 768)), T([512, 768], f16)), {})
Operator: aten.mul.Tensor
cnt: 1, ((T([4, 128], i64), T([4, 128], i64)), {})
cnt: 24, ((T([4, 128, 768], f16), 0.125), {})
Operator: aten.native_layer_norm.default
cnt: 13, ((T([4, 128, 768], f16), [768], T([768], f16), T([768], f16), 1e-05), {})
cnt: 12, ((T([512, 768], f16), [768], T([768], f16), T([768], f16), 1e-05), {})
Operator: aten.native_layer_norm_backward.default
cnt: 13, ((T([4, 128, 768], f16), T([4, 128, 768], f16), [768], T([4, 128, 1], f32), T([4, 128, 1], f32), T([768], f16), T([768], f16), [True, True, True]), {})
cnt: 12, ((T([512, 768], f16), T([512, 768], f16), [768], T([512, 1], f32), T([512, 1], f32), T([768], f16), T([768], f16), [True, True, True]), {})
Operator: aten.nll_loss_backward.default
cnt: 1, ((T([], f16), T([508, 50272], f16), T([508], i64), None, 1, -100, T([], f16)), {})
Operator: aten.nll_loss_forward.default
cnt: 1, ((T([508, 50272], f16), T([508], i64), None, 1, -100), {})
Operator: aten.relu.default
cnt: 12, ((T([512, 3072], f16),), {})
Operator: aten.rsub.Scalar
cnt: 1, ((T([4, 1, 128, 128], f16), 1.0), {})
Operator: aten.slice_backward.default
cnt: 1, ((T([4, 127, 50272], f16), [4, 127, 50272], 2, 0, 9223372036854775807, 1), {})
cnt: 1, ((T([4, 127, 50272], f16), [4, 128, 50272], 1, 0, -1, 1), {})
Operator: aten.sub.Tensor
cnt: 1, ((T([4, 128], i64), 1), {})
Operator: aten.sum.SymInt
cnt: 60, ((T([512, 768], f16), [0], True), {})
cnt: 12, ((T([512, 3072], f16), [0], True), {})
Operator: aten.threshold_backward.default
cnt: 12, ((T([512, 3072], f16), T([512, 3072], f16), 0), {})
Operator: aten.where.self
cnt: 12, ((T([4, 12, 128, 128], b8), T([4, 12, 128, 128], f16), T([4, 12, 128, 128], f16)), {})
